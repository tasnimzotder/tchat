name: Client Release

on:
  push:
    branches: [ 'main' ]
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-14, ubuntu-latest]  
        arch: [amd64, arm64] 
        exclude:
          - os: macos-14
            arch: amd64
          - os: ubuntu-latest
            arch: arm64

    defaults:
      run:
        working-directory: ./client 

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22

      - name: Install dependencies
        run: go mod download -x

      - name: test
        run: go test -v ./...

      - name: Set GOOS for macOS
        if: matrix.os == 'macos-14'
        run: echo "GOOS=darwin" >> $GITHUB_ENV
      
      - name: Set GOOS for Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: echo "GOOS=linux" >> $GITHUB_ENV

      - name: Build client
        env:
          CGO_ENABLED: 1
          GOOS: ${{ env.GOOS }}
          GOARCH: ${{ matrix.arch }}
        run: go build -o client

      - name: Upload client artifact
        uses: actions/upload-artifact@v3
        with:
          name: tchat-${{ env.GOOS }}-${{ matrix.arch }} 
          path: ./client 

  # release:
  #   # if: startsWith(github.ref, 'refs/tags/v')
  #   needs: build
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Download client artifact
  #       uses: actions/download-artifact@v3
  #       with:
  #         path: .
        
  #     - name: Create Release
  #       id: create_release
  #       uses: actions/create-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         tag_name: ${{ github.ref }}
  #         release_name: Release ${{ github.ref }}
  #         body: |
  #           Changes in this Release
  #           - First Change
  #           - Second Change
  #         draft: true
  #         prerelease: false
    
  #     - name: Upload release assets
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: ./tchat-*-*
  #         asset_name: tchat-*-*
  #         asset_content_type: application/octet-stream
